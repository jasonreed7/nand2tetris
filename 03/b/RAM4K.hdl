// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
        DMux8Way(in= load, sel= address[0..2], a= dmuxAOut, b= dmuxBOut, c= dmuxCOut, d= dmuxDOut, e= dmuxEOut, f= dmuxFOut, g= dmuxGOut, h= dmuxHOut);
        RAM512(in= in, load= dmuxAOut, address= address[3..11], out= ramAOut);
        RAM512(in= in, load= dmuxBOut, address= address[3..11], out= ramBOut);
        RAM512(in= in, load= dmuxCOut, address= address[3..11], out= ramCOut);
        RAM512(in= in, load= dmuxDOut, address= address[3..11], out= ramDOut);
        RAM512(in= in, load= dmuxEOut, address= address[3..11], out= ramEOut);
        RAM512(in= in, load= dmuxFOut, address= address[3..11], out= ramFOut);
        RAM512(in= in, load= dmuxGOut, address= address[3..11], out= ramGOut);
        RAM512(in= in, load= dmuxHOut, address= address[3..11], out= ramHOut);
        Mux8Way16(a= ramAOut, b= ramBOut, c= ramCOut, d= ramDOut, e= ramEOut, f= ramFOut, g= ramGOut, h= ramHOut, sel= address[0..2], out= out);
}