// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
        DMux4Way(in= load, sel= address[0..1], a= dmuxAOut, b= dmuxBOut, c= dmuxCOut, d= dmuxDOut);
        RAM4K(in= in, load= dmuxAOut, address= address[2..13], out= ramAOut);
        RAM4K(in= in, load= dmuxBOut, address= address[2..13], out= ramBOut);
        RAM4K(in= in, load= dmuxCOut, address= address[2..13], out= ramCOut);
        RAM4K(in= in, load= dmuxDOut, address= address[2..13], out= ramDOut);
        Mux4Way16(a= ramAOut, b= ramBOut, c= ramCOut, d= ramDOut, sel= address[0..1], out= out);
}